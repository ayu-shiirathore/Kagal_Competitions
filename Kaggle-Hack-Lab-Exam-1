{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":91462,"databundleVersionId":10803442,"sourceType":"competition"}],"dockerImageVersionId":30839,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import r2_score\nfrom sklearn.preprocessing import StandardScaler\nimport seaborn as sns\nimport matplotlib.pyplot as plt","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-01-16T15:04:33.281468Z","iopub.execute_input":"2025-01-16T15:04:33.281886Z","iopub.status.idle":"2025-01-16T15:04:35.276817Z","shell.execute_reply.started":"2025-01-16T15:04:33.281857Z","shell.execute_reply":"2025-01-16T15:04:35.275635Z"}},"outputs":[],"execution_count":1},{"cell_type":"code","source":"# Load the datasets\ntrain_df = pd.read_csv('/kaggle/input/ucs-654-kaggle-hack-lab-exam-1/train.csv')\ntest_df = pd.read_csv('/kaggle/input/ucs-654-kaggle-hack-lab-exam-1/test.csv')\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-16T15:04:41.590523Z","iopub.execute_input":"2025-01-16T15:04:41.591166Z","iopub.status.idle":"2025-01-16T15:04:41.651939Z","shell.execute_reply.started":"2025-01-16T15:04:41.591132Z","shell.execute_reply":"2025-01-16T15:04:41.650679Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"train_df.head()\ntrain_df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-16T15:04:42.645285Z","iopub.execute_input":"2025-01-16T15:04:42.645692Z","iopub.status.idle":"2025-01-16T15:04:42.678231Z","shell.execute_reply.started":"2025-01-16T15:04:42.645662Z","shell.execute_reply":"2025-01-16T15:04:42.677142Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 10999 entries, 0 to 10998\nData columns (total 7 columns):\n #   Column  Non-Null Count  Dtype  \n---  ------  --------------  -----  \n 0   target  10999 non-null  float64\n 1   f1      10999 non-null  float64\n 2   f2      10999 non-null  float64\n 3   f3      10999 non-null  float64\n 4   f4      10999 non-null  int64  \n 5   f5      10999 non-null  float64\n 6   f6      10999 non-null  float64\ndtypes: float64(6), int64(1)\nmemory usage: 601.6 KB\n","output_type":"stream"}],"execution_count":3},{"cell_type":"code","source":"test_df.head()\ntest_df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-16T15:04:45.119070Z","iopub.execute_input":"2025-01-16T15:04:45.119421Z","iopub.status.idle":"2025-01-16T15:04:45.132735Z","shell.execute_reply.started":"2025-01-16T15:04:45.119381Z","shell.execute_reply":"2025-01-16T15:04:45.131279Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 5383 entries, 0 to 5382\nData columns (total 7 columns):\n #   Column  Non-Null Count  Dtype  \n---  ------  --------------  -----  \n 0   id      5383 non-null   int64  \n 1   f1      5383 non-null   float64\n 2   f2      5383 non-null   float64\n 3   f3      5383 non-null   float64\n 4   f4      5383 non-null   int64  \n 5   f5      5383 non-null   float64\n 6   f6      5383 non-null   float64\ndtypes: float64(5), int64(2)\nmemory usage: 294.5 KB\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"# Visualize outliers using boxplots (optional, just to check)\nsns.boxplot(x=train_df['f1'])\nsns.boxplot(x=train_df['f2'])\nsns.boxplot(x=train_df['f3'])\nsns.boxplot(x=train_df['f4'])\nsns.boxplot(x=train_df['f5'])\nsns.boxplot(x=train_df['f6'])\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-16T15:04:54.626938Z","iopub.execute_input":"2025-01-16T15:04:54.627256Z","iopub.status.idle":"2025-01-16T15:04:54.899982Z","shell.execute_reply.started":"2025-01-16T15:04:54.627234Z","shell.execute_reply":"2025-01-16T15:04:54.898746Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"# Split train data into features and target\nX = train_df[['f1', 'f2', 'f3', 'f4', 'f5', 'f6']]\ny = train_df['target']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-16T15:05:24.743123Z","iopub.execute_input":"2025-01-16T15:05:24.743476Z","iopub.status.idle":"2025-01-16T15:05:24.750324Z","shell.execute_reply.started":"2025-01-16T15:05:24.743450Z","shell.execute_reply":"2025-01-16T15:05:24.748966Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"# Standardize features using Z-score normalization\nscaler = StandardScaler()\nX_scaled = scaler.fit_transform(X)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-16T15:05:39.888073Z","iopub.execute_input":"2025-01-16T15:05:39.888421Z","iopub.status.idle":"2025-01-16T15:05:39.914831Z","shell.execute_reply.started":"2025-01-16T15:05:39.888394Z","shell.execute_reply":"2025-01-16T15:05:39.913667Z"}},"outputs":[],"execution_count":10},{"cell_type":"code","source":"# Split into training and validation sets\nX_train, X_val, y_train, y_val = train_test_split(X_scaled, y, test_size=0.2, random_state=42)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-16T15:05:58.144309Z","iopub.execute_input":"2025-01-16T15:05:58.144801Z","iopub.status.idle":"2025-01-16T15:05:58.152799Z","shell.execute_reply.started":"2025-01-16T15:05:58.144772Z","shell.execute_reply":"2025-01-16T15:05:58.151520Z"}},"outputs":[],"execution_count":11},{"cell_type":"code","source":"# Train a Random Forest Regressor\n#model = RandomForestRegressor(random_state=42, n_estimators=100)\n# Train a Random Forest Regressor\nmodel = RandomForestRegressor(random_state=42, n_estimators=200, max_depth=15)\nmodel.fit(X_train, y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-16T15:06:09.762704Z","iopub.execute_input":"2025-01-16T15:06:09.763036Z","iopub.status.idle":"2025-01-16T15:06:16.043188Z","shell.execute_reply.started":"2025-01-16T15:06:09.763011Z","shell.execute_reply":"2025-01-16T15:06:16.042078Z"}},"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"RandomForestRegressor(max_depth=15, n_estimators=200, random_state=42)","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(max_depth=15, n_estimators=200, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(max_depth=15, n_estimators=200, random_state=42)</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":12},{"cell_type":"code","source":"# Predict on the validation set\ny_val_pred = model.predict(X_val)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-16T15:06:19.004767Z","iopub.execute_input":"2025-01-16T15:06:19.005178Z","iopub.status.idle":"2025-01-16T15:06:19.088066Z","shell.execute_reply.started":"2025-01-16T15:06:19.005149Z","shell.execute_reply":"2025-01-16T15:06:19.086878Z"}},"outputs":[],"execution_count":13},{"cell_type":"code","source":"# Calculate the R^2 score (accuracy)\nr2 = r2_score(y_val, y_val_pred)\nprint(f\"R^2 Score (Accuracy) on Validation Set: {r2}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-16T15:06:24.293295Z","iopub.execute_input":"2025-01-16T15:06:24.293723Z","iopub.status.idle":"2025-01-16T15:06:24.302993Z","shell.execute_reply.started":"2025-01-16T15:06:24.293692Z","shell.execute_reply":"2025-01-16T15:06:24.301711Z"}},"outputs":[{"name":"stdout","text":"R^2 Score (Accuracy) on Validation Set: 0.7400519305824551\n","output_type":"stream"}],"execution_count":14},{"cell_type":"code","source":"# Prepare test features\nX_test = test_df[['f1', 'f2', 'f3', 'f4', 'f5', 'f6']]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-16T13:50:33.843235Z","iopub.execute_input":"2025-01-16T13:50:33.843566Z","iopub.status.idle":"2025-01-16T13:50:33.848965Z","shell.execute_reply.started":"2025-01-16T13:50:33.843540Z","shell.execute_reply":"2025-01-16T13:50:33.847865Z"}},"outputs":[],"execution_count":76},{"cell_type":"code","source":"# Predict on the test set\ntest_df['target'] = model.predict(X_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-16T13:50:34.948152Z","iopub.execute_input":"2025-01-16T13:50:34.948484Z","iopub.status.idle":"2025-01-16T13:50:35.107750Z","shell.execute_reply.started":"2025-01-16T13:50:34.948459Z","shell.execute_reply":"2025-01-16T13:50:35.106535Z"}},"outputs":[],"execution_count":77},{"cell_type":"code","source":"# Create the submission file\nsubmission_df = test_df[['id', 'target']]\nsubmission_path = 'submission.csv'  # Save in the current directory\nsubmission_df.to_csv(submission_path, index=False)\n\nprint(f\"Submission file saved to: {submission_path}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-16T13:25:12.275709Z","iopub.execute_input":"2025-01-16T13:25:12.276096Z","iopub.status.idle":"2025-01-16T13:25:12.300890Z","shell.execute_reply.started":"2025-01-16T13:25:12.276067Z","shell.execute_reply":"2025-01-16T13:25:12.299689Z"}},"outputs":[{"name":"stdout","text":"Submission file saved to: submission.csv\n","output_type":"stream"}],"execution_count":26},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}